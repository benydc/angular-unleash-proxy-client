{"version":3,"file":"karelics-angular-unleash-proxy-client.mjs","sources":["../../../projects/angular-unleash-proxy-client/src/lib/unleash.initializer.ts","../../../projects/angular-unleash-proxy-client/src/lib/unleash.service.ts","../../../projects/angular-unleash-proxy-client/src/lib/directives/feature.directive.ts","../../../projects/angular-unleash-proxy-client/src/lib/directives/feature-enabled.directive.ts","../../../projects/angular-unleash-proxy-client/src/lib/directives/feature-disabled.directive.ts","../../../projects/angular-unleash-proxy-client/src/lib/guards/utils.ts","../../../projects/angular-unleash-proxy-client/src/lib/guards/feature-enabled.guard.ts","../../../projects/angular-unleash-proxy-client/src/lib/guards/feature-disabled.guard.ts","../../../projects/angular-unleash-proxy-client/src/public-api.ts","../../../projects/angular-unleash-proxy-client/src/karelics-angular-unleash-proxy-client.ts"],"sourcesContent":["import { APP_INITIALIZER, EnvironmentProviders, inject, InjectionToken, makeEnvironmentProviders } from '@angular/core';\nimport { UnleashService } from './unleash.service';\nimport { take, tap } from 'rxjs/operators';\nimport { IConfig as UnleashConfig } from 'unleash-proxy-client';\n\nexport const UNLEASH_CONFIG = new InjectionToken<UnleashConfig>('Unleash config');\n\nexport function provideUnleashProxy(\n  config: UnleashConfig,\n): EnvironmentProviders {\n  return makeEnvironmentProviders([\n    { provide: UNLEASH_CONFIG, useValue: config },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => {\n        const unleashService = inject(UnleashService);\n        return () => unleashService.initialized$.pipe(\n          take(1),\n          tap(() => unleashService.unleash.start())\n        );\n      },\n      multi: true,\n    },\n  ]);\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { EVENTS, IConfig as UnleashConfig, UnleashClient } from 'unleash-proxy-client';\nimport { UNLEASH_CONFIG } from './unleash.initializer';\nimport { Observable, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, startWith } from 'rxjs/operators';\nimport { ImpressionEvent } from './events/impression';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnleashService {\n  readonly unleash = new UnleashClient(this.config);\n\n  readonly initialized$ = fromEvent<void>(this.unleash, EVENTS.INIT).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  readonly error$ = fromEvent<unknown>(this.unleash, EVENTS.ERROR).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  readonly ready$ = fromEvent<void>(this.unleash, EVENTS.READY).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  readonly update$ = fromEvent<void>(this.unleash, EVENTS.UPDATE).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  readonly impression$ = fromEvent<ImpressionEvent>(this.unleash, EVENTS.IMPRESSION).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n\n  constructor(\n    @Inject(UNLEASH_CONFIG) private readonly config: UnleashConfig,\n  ) { }\n\n  isEnabled(featureFlag: string): boolean {\n    return this.unleash.isEnabled(featureFlag);\n  }\n\n  isDisabled(featureFlag: string): boolean {\n    return !this.isEnabled(featureFlag);\n  }\n\n  isEnabled$(featureFlag: string): Observable<boolean> {\n    return this.update$.pipe(\n      startWith(null),\n      map(() => this.isEnabled(featureFlag)),\n      distinctUntilChanged(),\n    );\n  }\n\n  isDisabled$(featureFlag: string): Observable<boolean> {\n    return this.isEnabled$(featureFlag).pipe(\n      map((state) => !state),\n    );\n  }\n}\n","import { Directive, inject, OnDestroy, OnInit } from '@angular/core';\nimport { UnleashService } from '../unleash.service';\nimport { NgIf } from '@angular/common';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\n\n@Directive()\nexport abstract class FeatureDirective extends NgIf<boolean> implements OnInit, OnDestroy {\n  protected readonly unleashService = inject(UnleashService);\n\n  private readonly toggleNameSubject = new ReplaySubject<string>(1);\n  private readonly destroySubject = new Subject<void>();\n\n  protected abstract toggleState$: (toggleName: string) => Observable<boolean>;\n\n  ngOnInit(): void {\n    this.toggleNameSubject.pipe(\n      switchMap((toggleName) => this.toggleState$(toggleName)),\n      tap((state) => this.update(state)),\n      takeUntil(this.destroySubject),\n    ).subscribe();\n  }\n\n  protected setToggleName(val: string): void {\n    this.toggleNameSubject.next(val);\n  }\n\n  protected update(state: boolean): void {\n    this.ngIf = state;\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n  }\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nimport { FeatureDirective } from './feature.directive';\nimport { NgIfContext } from '@angular/common';\n\n@Directive({\n  selector: '[featureEnabled]',\n  standalone: true,\n})\nexport class FeatureEnabledDirective extends FeatureDirective {\n  @Input('featureEnabled') set toggleName(val: string) {\n    this.setToggleName(val);\n  }\n\n  @Input('featureEnabledElse')\n  set else(templateRef: TemplateRef<NgIfContext<boolean>> | null) {\n    super.ngIfElse = templateRef;\n  }\n\n  protected toggleState$ = this.unleashService.isEnabled$.bind(this.unleashService);\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nimport { FeatureDirective } from './feature.directive';\nimport { NgIfContext } from '@angular/common';\n\n@Directive({\n  selector: '[featureDisabled]',\n  standalone: true,\n})\nexport class FeatureDisabledDirective extends FeatureDirective {\n  @Input('featureDisabled') set toggleName(val: string) {\n    this.setToggleName(val);\n  }\n\n  @Input('featureDisabledElse')\n  set else(templateRef: TemplateRef<NgIfContext<boolean>> | null) {\n    super.ngIfElse = templateRef;\n  }\n\n  protected toggleState$ = this.unleashService.isDisabled$.bind(this.unleashService);\n}\n","import { Router, UrlTree } from '@angular/router';\nimport { inject } from '@angular/core';\n\nexport function redirectResult(redirectUrl?: string | UrlTree): UrlTree | Promise<boolean> | boolean {\n  if (redirectUrl) {\n    if (typeof redirectUrl === 'string') {\n      const router = inject(Router);\n      return router.navigateByUrl(redirectUrl);\n    } else {\n      return redirectUrl;\n    }\n  }\n  return false;\n}\n","import { CanActivateFn, UrlTree } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { UnleashService } from '../unleash.service';\nimport { redirectResult } from './utils';\n\nexport function featureEnabled(toggleName: string, redirectUrl?: string | UrlTree): CanActivateFn {\n  return () => {\n    const unleashService = inject(UnleashService);\n    return unleashService.isEnabled(toggleName) || redirectResult(redirectUrl);\n  };\n}\n","import { CanActivateFn, UrlTree } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { UnleashService } from '../unleash.service';\nimport { redirectResult } from './utils';\n\nexport function featureDisabled(toggleName: string, redirectUrl?: string | UrlTree): CanActivateFn {\n  return () => {\n    const unleashService = inject(UnleashService);\n    return !unleashService.unleash.isEnabled(toggleName) || redirectResult(redirectUrl);\n  };\n}\n","/*\n * Public API Surface of angular-unleash-proxy-client\n */\n\nexport * from './lib/unleash.service';\nexport * from './lib/unleash.initializer';\nexport * from './lib/directives/feature-enabled.directive';\nexport * from './lib/directives/feature-disabled.directive';\nexport * from './lib/guards/feature-enabled.guard';\nexport * from './lib/guards/feature-disabled.guard';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}